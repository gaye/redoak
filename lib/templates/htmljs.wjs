[]
  var result = "";
  var val;
  {.loop .}{{{.}}}{/}

* []
  {.loop .}{{{.}}}{/}

""
  result += {{.}};
  {{}}

{} ""
  {{{.}}}

{type=loop}
  {.if ensurePath}
    var arr;
    if ({.loop ensurePath}{{../objname}}{.loop .}[{{.}}]{/} && {/}
        Array.isArray(arr = {{../objname}}{.loop path}[{{.}}]{/})) {
  {/}
      for (var i = 0; i < arr.length; i++) {
        (function(i, last) { {{{contents}}} })(i, arr.length - 1);
      }
  {.if ensurePath}}{/}
  {{}}

{type=if}
  {.if ensurePath}
    if (
        {.loop ensurePath}{{../objname}}{.loop .}[{{.}}]{/} && {/}
        {.loop clause.ensurePath}{{../objname}}[{{.}}] && {/}
        {.if clause.type is simple}!Widget.isEmptyObject({/}
        {.if clause.type is inverse}Widget.isEmptyObject({/}
          {.if clause.path.0.type is i}i{/}
          {.if not clause.path.0.type is i}
            {{../objname}}{.loop clause.path}[{{.}}]{/}
          {/}
          {.if clause.type is eq}=={/}
          {.if clause.type is neq}!={/}
          {.if value.type is last}last{/}
          {.if not value.type}{{value}}{/}
        {.if clause.type is simple){/}
        {.if clause.type is inverse}){/}
       ) {
  {/}
    {{{contents}}}
  {.if clause.ensurePath}}{/}
  {{}}

{type=unbound}
  {.if ensurePath}
    if ({.loop ensurePath}{{{../objname}}}{.loop .}[{{.}}]{/} && {/}
        !Widget.isEmptyObject(val = {{{../objname}}}{.loop path}[{{.}}]{/})) {
  {/}
    {.if escape}result += Widget.escapeHtml(val);{/}
    {.if not escape}result += '' + val;{/}
  {.if ensurePath}}{/}
  {{}}
